generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// 用户表
model GlazeUser {
  id        Int               @id @default(autoincrement())
  username  String            @unique @db.Text /// 用户名
  phone     String?           @unique @db.Text /// 手机号
  password  String?           @db.Text /// 密码
  avatar    String?           @db.Text /// 头像地址
  nickname  String?           @db.Text /// 昵称
  intro     String?           @db.Text /// 介绍
  createdAt DateTime          @default(now()) @db.Timestamp(6) /// 创建时间
  updatedAt DateTime          @updatedAt @db.Timestamp(6) /// 更新时间
  inTeams   GlazeTeamMember[]

  deployments GlazeProjectDeployInfo[]

  inLastUpdatePluginList GlazePlugin[]
  @@index([phone, username])
}

//#region 用户组织关系

enum GlazeTeamRole {
  /// 管理员
  ADMIN
  /// 普通成员
  MEMBER
  /// 仅阅读
  VIEWER
}

enum GlazeTeamType {
  /// 草稿
  DRAFT
  /// 公开组织
  PUBLIC
  /// 私有组织
  PRIVATE
}

model GlazeTeamMember {
  member   GlazeUser     @relation(fields: [memberId], references: [id]) /// 成员
  memberId Int
  team     GlazeTeam     @relation(fields: [teamId], references: [id]) /// 团队
  teamId   Int
  role     GlazeTeamRole @default(MEMBER)

  @@id([memberId, teamId])
}

model GlazeTeam {
  id             Int                  @id @default(autoincrement())
  name           String               @db.Text /// 团队名称
  type           GlazeTeamType        @default(PRIVATE)
  intro          String?              @db.Text /// 介绍
  logo           String?              @db.Text /// 团队logo
  members        GlazeTeamMember[] /// 团队成员
  projectFolders GlazeProjectFolder[] /// 项目文件夹
  createdPlugins GlazePlugin[] /// 创建的插件
  createdAt      DateTime             @default(now()) @db.Timestamp(6) /// 创建时间
  updatedAt      DateTime             @updatedAt @db.Timestamp(6) /// 更新时间
}

//#endregion

enum GlazeFolderType {
  /// 只关联未创建文件夹的项目，但展示所有
  ALL
  /// 手动创建的文件夹
  CUSTOM
  /// 存档用的文件夹
  ARCHIVED
}

model GlazeProjectFolder {
  id        Int             @id @default(autoincrement())
  name      String          @db.Text /// 文件夹名称
  projects  GlazeProject[]
  createdAt DateTime        @default(now()) @db.Timestamp(6) /// 创建时间
  updatedAt DateTime        @updatedAt @db.Timestamp(6) /// 更新时间
  team      GlazeTeam       @relation(fields: [teamId], references: [id])
  teamId    Int
  type      GlazeFolderType @default(CUSTOM)
}

model GlazeProject {
  id                 Int                      @id @default(autoincrement())
  name               String?                  @unique @db.Text /// 项目名称
  intro              String?                  @db.Text /// 介绍
  preview            String?                  @db.Text /// 预览图片
  projectFolder      GlazeProjectFolder       @relation(fields: [projectFolderId], references: [id])
  projectFolderId    Int
  createdAt          DateTime                 @default(now()) @db.Timestamp(6) /// 创建时间
  updatedAt          DateTime                 @updatedAt @db.Timestamp(6) /// 更新时间
  usingPlugins       GlazeProjectUsedPlugin[]
  documentUpdate     GlazeDocumentUpdate[]
  documentDeployInfo GlazeProjectDeployInfo?
}

model GlazeDocumentUpdate {
  id        Int          @id @default(autoincrement())
  project   GlazeProject @relation(fields: [projectId], references: [id])
  projectId Int
  update    Bytes        @db.ByteA
  createdAt DateTime     @default(now()) @db.Timestamp(6) /// 创建时间
  updatedAt DateTime     @updatedAt @db.Timestamp(6) /// 更新时间
}

enum GlazeProjectDeployStatus {
  /// 执行中
  RUNNING
  /// 暂停
  SUSPEND
}

model GlazeProjectDeployInfo {
  id          Int                      @id @default(autoincrement())
  info        Bytes                    @db.ByteA
  path        String                   @unique @db.Text
  createdAt   DateTime                 @default(now()) @db.Timestamp(6) /// 创建时间
  updatedAt   DateTime                 @updatedAt @db.Timestamp(6) /// 更新时间
  project     GlazeProject             @relation(fields: [projectId], references: [id])
  projectId   Int                      @unique
  log         GlazeProjectLogInfo[]
  clickEvents GlazeProjectClickEvent[]
  status      GlazeProjectDeployStatus @default(RUNNING)
  screenshot  String?                  @db.Text
  by          GlazeUser                @relation(fields: [byUserId], references: [id])
  byUserId    Int

  @@index([path])
}

model GlazeProjectLogInfo {
  id           Int                    @id @default(autoincrement())
  deployInfo   GlazeProjectDeployInfo @relation(fields: [deployInfoId], references: [id])
  deployInfoId Int
  remoteAddr   String                 @db.Text
  protocol     String                 @db.Text
  method       String                 @db.Text
  host         String                 @db.Text
  uri          String                 @db.Text
  status       Int                    @db.Integer
  size         Int                    @db.Integer
  duration     Float                  @db.DoublePrecision
  time         DateTime
}

enum GlazeComponentType {
  BUILD_IN /// 内置组件
  CUSTOM /// 自定义组件
}

model GlazeComponent {
  id        String             @id
  name      String?            @unique @db.Text /// 组件名称
  type      GlazeComponentType @default(CUSTOM)
  icon      String?            @db.Text /// 图标
  createdAt DateTime           @default(now()) @db.Timestamp(6) /// 创建时间
  updatedAt DateTime           @updatedAt @db.Timestamp(6) /// 更新时间
}

enum GlazePluginType {
  PRIVATE /// 私有插件
  PUBLIC /// 公开插件
}

model GlazePlugin {
  id                 String                   @id
  name               String                   @db.Text /// 插件名称
  desc               String?                  @db.Text /// 插件描述
  icon               String?                  @db.Text /// 插件图标
  path               String                   @db.Text /// 插件资源地址
  type               GlazePluginType          @default(PRIVATE)
  ownerTeam          GlazeTeam                @relation(fields: [ownerTeamId], references: [id])
  ownerTeamId        Int
  lastUpdateBy       GlazeUser                @relation(fields: [lastUpdateByUserId], references: [id])
  lastUpdateByUserId Int
  configSchema       Json?
  usedProjects       GlazeProjectUsedPlugin[]
  createdAt          DateTime                 @default(now()) @db.Timestamp(6) /// 创建时间
  updatedAt          DateTime                 @updatedAt @db.Timestamp(6) /// 更新时间
}

model GlazeProjectUsedPlugin {
  project   GlazeProject @relation(fields: [projectId], references: [id])
  projectId Int
  plugin    GlazePlugin  @relation(fields: [pluginId], references: [id])
  pluginId  String
  createdAt DateTime     @default(now()) @db.Timestamp(6) /// 创建时间
  updatedAt DateTime     @updatedAt @db.Timestamp(6) /// 更新时间
  config    Json?

  @@id([projectId, pluginId])
}

model GlazeProjectClickEvent {
  id           String                 @id
  nodeId       String
  time         DateTime               @default(now()) @db.Timestamp(6) /// 点击时间
  path         String                 @db.Text
  position     Json
  deployment   GlazeProjectDeployInfo @relation(fields: [deploymentId], references: [id])
  deploymentId Int
}
